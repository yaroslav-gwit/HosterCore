// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/carp-ha/backups": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Receive the cluster state from the master.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only HA user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "High Availability"
                ],
                "summary": "Receive the cluster state from the master.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CarpUtils.BackupInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/carp-ha/ping": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Ping CARP interface.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only HA user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "High Availability"
                ],
                "summary": "Ping CARP interface.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CarpUtils.HostInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CarpUtils.CarpPingResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/carp-ha/receive-state/{master_hostname}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Receive the cluster state from the master.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only HA user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "High Availability"
                ],
                "summary": "Receive the cluster state from the master.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CarpUtils.HaStatus"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Hostname of the master server",
                        "name": "master_hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/dataset/all": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get active dataset list.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Get active dataset list.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.DatasetInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/dataset/unlock": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Unlock an encrypted dataset.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Datasets"
                ],
                "summary": "Unlock an encrypted dataset.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DatasetEncryptionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/ha/jail-list": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Handle the HA enabled Jail list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HA"
                ],
                "summary": "Handle the HA enabled Jail list.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HandlersHA.HaJail"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/ha/ping": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Handle the HA node ping.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HA"
                ],
                "summary": "Handle the HA node ping.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestApiConfig.HaNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/ha/register": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Handle the HA node registration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HA"
                ],
                "summary": "Handle the HA node registration.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestApiConfig.HaNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/ha/terminate": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Handle the HA graceful termination signal.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HA"
                ],
                "summary": "Handle the HA graceful termination signal.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/ha/vm-list": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Handle the HA enabled VM list.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HA"
                ],
                "summary": "Handle the HA enabled VM list.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HandlersHA.HaVm"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Simple function, that returns this REST API server health status.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "REST API server health status.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    }
                }
            }
        },
        "/health/auth/any": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Check if ` + "`" + `any` + "`" + ` of the two users can log in. Useful for the routes which are required by both users: regular and HA.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check ` + "`" + `any` + "`" + ` user authentication.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/health/auth/ha": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Check the ` + "`" + `HA` + "`" + ` user authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check the ` + "`" + `HA` + "`" + ` user authentication.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/health/auth/regular": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Check the ` + "`" + `regular` + "`" + ` user authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check the ` + "`" + `regular` + "`" + ` user authentication.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/info": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Host info.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Get Host info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterHostUtils.HostInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/readme": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get README.MD for this particular Hoster node.",
                "tags": [
                    "Host"
                ],
                "summary": "Get README.MD for this particular Hoster node.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Host Settings.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Get Host Settings.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterHost.HostConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/add-ssh-key": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new VM SSH access key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Add a new VM SSH access key.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SshKeyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/add-tag/{tag}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new Host-related tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Add a new Host-related tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Host Tag",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/add-upstream-dns": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new upstream DNS server.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Add a new upstream DNS server.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpstreamDnsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/api": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get RestAPI Settings (including HA settings).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Get RestAPI Settings (including HA settings).",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RestApiConfig.RestApiConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/delete-ssh-key": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete an existing SSH key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Delete an existing SSH key.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SshKeyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/delete-tag/{tag}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete an existing Host-related tag.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete an existing Host-related tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Host Tag",
                        "name": "tag",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/delete-upstream-dns": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete an upstream DNS server.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Delete an upstream DNS server.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpstreamDnsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/dns-search-domain": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Post a new DNS search domain.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Post a new DNS search domain.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DnsSearchDomainInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/ssh-auth-key": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new host-level authorized SSH key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Add a new host-level authorized SSH key.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.HostAuthSshKeyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/host/settings/vm-templates": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Post an updated VM template site.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Post an updated VM template site.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmTemplateLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/all": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of all Jails, including the information about them.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "List all Jails.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterJailUtils.JailApi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/all/cache": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of all Jails, including the information about them (cached version).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "List all Jails (cached version).",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterJailUtils.JailApi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/clone": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Clone the Jail using it's name, and optionally specify the snapshot name to be used for cloning.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Clone the Jail.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.JailCloneInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/deploy": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Deploy a new Jail using a set of defined parameters.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Deploy a new Jail.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HosterJail.DeployInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/destroy/{jail_name}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "` + "`" + `DANGER` + "`" + ` - destructive operation!\u003cbr\u003e\u003cbr\u003eDestroy a specific Jail using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Destroy a specific Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/get/shells/{jail_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get a list of active shells for a specific Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Get a list of active shells for a specific Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.JailShells"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/info/{jail_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Jail info.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Get Jail info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterJailUtils.JailApi"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/readme/{jail_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get README.MD for a particular Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Get README.MD for a particular Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/add-tag/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new tag for any particular Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails",
                    "Tags"
                ],
                "summary": "Add a new tag for any particular Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Tag",
                        "name": "new_tag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TagInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/cpu/{jail_name}/{limit}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify Jail's CPU limitation (in %, maximum 100).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Modify Jail's CPU limitation (in %, 1-100).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Percentage limit (1-100)",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/description/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update Jails's description.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Update Jails's description.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Jail",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ResourceDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/dns/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify Jail's DNS settings.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Modify Jail's DNS settings.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.JailDnsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/network/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify Jail's Network settings.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Modify Jail's Network settings.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.JailNetworkInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/production/{jail_name}/{production}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify Jail's Workload type (e.g. is this a production Jail, true or false).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Modify Jail's Workload type (e.g. is this a production Jail, true or false).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workload type (is this a production Jail?), e.g. true or false",
                        "name": "production",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/ram/{jail_name}/{limit}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify Jail's RAM limit.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Modify Jail's RAM limit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Memory limit (in MB or GB, e.g. 2GB, or 2048MB)",
                        "name": "limit",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/settings/{jail_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get Jail config (settings).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Jail config (settings).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterJailUtils.JailConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/start-all/{production}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start all Jails.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Start all Jails.",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Start only production Jails (true or false)",
                        "name": "production",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/start/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start a specific Jail using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Start a specific Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/stop-all": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Stop all Jails.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Stop all Jails.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/stop/{jail_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Stop a specific Jail using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "Stop a specific Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/jail/template/list": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of all Jail templates.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jails"
                ],
                "summary": "List all Jail templates.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/metrics/jail/{jail_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the RCTL metrics for a specific Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics",
                    "Jails"
                ],
                "summary": "Get the RCTL metrics for a specific Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jail Name",
                        "name": "jail_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rctl.RctMetrics"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/metrics/vm/{vm_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the RCTL metrics for a specific VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics",
                    "VMs"
                ],
                "summary": "Get the RCTL metrics for a specific VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rctl.RctMetrics"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/network/add-new-network": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new network.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Add a new network.",
                "parameters": [
                    {
                        "description": "Request Payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterNetwork.NetworkConfig"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/network/all": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the networks list.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Get the networks list.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterNetwork.NetworkConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/all/{res_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "List all snapshots for any given VM or a Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "List all snapshots for any given VM or a Jail.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Name (Jail or VM)",
                        "name": "res_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/zfsutils.SnapshotInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/all/{res_name}/cache": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "List all snapshots for any given VM or a Jail (cached version).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "List all snapshots for any given VM or a Jail (cached version).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource Name (Jail or VM)",
                        "name": "res_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/zfsutils.SnapshotInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/clone": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Clone an existing VM or Jail snapshot.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.\u003cbr\u003e",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "Clone an existing VM or Jail snapshot.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnapshotInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/destroy": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Destroy a snapshot for any given VM or a Jail.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "Destroy a snapshot for any given VM or a Jail.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnapshotName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/rollback": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Rollback to a previous snapshot.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.\u003cbr\u003e",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "Rollback to a previous snapshot.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnapshotName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/snapshot/take/immediate": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Take a new VM or Jail snapshot, using the resource name (Jail name or a VM name).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Snapshots"
                ],
                "summary": "Take a new snapshot.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SnapshotInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/all": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of all VMs, including the information about them.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "List all VMs.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterVmUtils.VmApi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/all/cache": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of all VMs, including the information about them (cached version).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "List all VMs (cached version).",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HosterVmUtils.VmApi"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/clone": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Clone the VM using it's name, and optionally specify the snapshot name to be used for cloning.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Clone the VM.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmCloneInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/cloud-init/mount-iso/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Mount a real CloudInit ISO.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `REST` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Mount a real CloudInit ISO.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/cloud-init/unmount-iso/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Replace a real CloudInit ISO with an empty one. Useful in the situations where multiple users reside on the same VM, because an empty ISO will protect the VM's secrets.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `REST` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Replace a real CloudInit ISO with an empty one.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/deploy": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Deploy a new VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Deploy the new VM.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HosterVm.VmDeployInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/destroy/{vm_name}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Destroy the VM using it's name.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Destroy the VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/info/{vm_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the VM Info.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Get the VM Info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterVmUtils.VmApi"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/readme/{vm_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get README.MD for a particular VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Get README.MD for a particular VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/add-tag/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new tag for any particular VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs",
                    "Tags"
                ],
                "summary": "Add a new tag for any particular VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Tag",
                        "name": "new_tag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TagInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/cpu/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's CPU settings.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's CPU settings.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmCpuInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/delete-tag/{vm_name}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete an existing tag for any specific VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs",
                    "Tags"
                ],
                "summary": "Delete an existing tag for any specific VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TagInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/description/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update VM's description.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Update VM's description.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ResourceDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/disk/add-new/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new VM data disk.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Add a new VM data disk.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HosterVmUtils.VmDisk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/disk/expand/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Expand an existing VM disk.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Expand an existing VM disk.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmDiskExpandInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/firmware/{vm_name}/{firmware}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's Firmware type (e.g. bootloader type, bios vs uefi).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's Firmware type (e.g. bootloader type, bios vs uefi).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Firmware type (bootloader type), e.g. bios or uefi",
                        "name": "firmware",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/mount-iso/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Mount a real ISO. This could be an installation ISO, or an ISO with OS drivers, etc.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `REST` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Mount a real ISO.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/network/add/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new VM network interface.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs",
                    "Networks"
                ],
                "summary": "Add a new VM network interface.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HosterVmUtils.VmNetwork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/os-info/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's OS info (e.g. os_type - debian12, os_comment - Debian 12).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's OS info (e.g. os_type - debian12, os_comment - Debian 12).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmOsSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/production/{vm_name}/{production}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's Workload type (e.g. is this a production VM, true or false).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's Workload type (e.g. is this a production VM, true or false).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workload type (is this a production VM), e.g. true or false",
                        "name": "production",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/ram/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's RAM settings.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's RAM settings.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VmRamInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/unmount-iso/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Unmount an installation ISO. This could be an installation ISO, or an ISO with OS drivers, etc.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `REST` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Unmount an installation ISO.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/vnc-resolution/{vm_name}/{resolution}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Modify VM's VNC Resolution.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `rest` + "`" + ` user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Modify VM's VNC Resolution.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the VM",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Resolution code, e.g. 3 for 1024x768",
                        "name": "resolution",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/settings/{vm_name}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the settings for a particular VM.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Get the settings for a particular VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterVmUtils.VmConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/start-all/{production}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start all VMs.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Start all VMs.",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Start only production VMs (true or false)",
                        "name": "production",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/start/wait-vnc/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start a specific VM using it's name as a parameter (and wait for a VNC screen connection).\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only ` + "`" + `REST` + "`" + `-type user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Start a specific VM (and wait for a VNC screen connection).",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/start/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Start a specific VM using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Start a specific VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/stop-all/{force}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Stop all VMs.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Stop all VMs.",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Forcefully stop all the VMs (true or false)",
                        "name": "force",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/stop/force/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Stop (forcefully) a specific VM using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Stop (forcefully) a specific VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/stop/{vm_name}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Stop a specific VM using it's name as a parameter.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Both users are allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs"
                ],
                "summary": "Stop a specific VM.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM Name",
                        "name": "vm_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerSuccess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        },
        "/vm/templates": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Get the list of VM templates.\u003cbr\u003e` + "`" + `AUTH` + "`" + `: Only REST user is allowed.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VMs",
                    "Templates"
                ],
                "summary": "Get the list of VM templates.",
                "parameters": [
                    {
                        "description": "Request payload",
                        "name": "Input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ZfsDatasetInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HosterVmUtils.VmTemplate"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.SwaggerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CarpUtils.BackupInfo": {
            "type": "object",
            "properties": {
                "current_host": {
                    "description": "Current host name",
                    "type": "string"
                },
                "failover_strategy": {
                    "description": "Failover strategy, e.g. \"cireset\" or \"change_parent\"",
                    "type": "string"
                },
                "last_snapshot": {
                    "description": "Last snapshot name",
                    "type": "string"
                },
                "parent_host": {
                    "description": "Parent host name",
                    "type": "string"
                },
                "resource_name": {
                    "description": "Resource name",
                    "type": "string"
                },
                "resource_type": {
                    "description": "Resource type, e.g. \"vm\", \"jail\"",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "CarpUtils.CarpPingResponse": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "hostname",
                    "type": "string"
                },
                "message": {
                    "description": "success",
                    "type": "string"
                }
            }
        },
        "CarpUtils.HaStatus": {
            "type": "object",
            "properties": {
                "current_master": {
                    "description": "Current master hostname",
                    "type": "string"
                },
                "hosts": {
                    "description": "List of hosts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarpUtils.HostInfo"
                    }
                },
                "resources": {
                    "description": "List of resources",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarpUtils.BackupInfo"
                    }
                },
                "service_health": {
                    "description": "Health status: OK, WARN, CRIT",
                    "type": "string"
                },
                "status": {
                    "description": "Current HA status: MASTER, BACKUP, INIT",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "CarpUtils.HostInfo": {
            "type": "object",
            "properties": {
                "host_name": {
                    "description": "Host name",
                    "type": "string"
                },
                "ip_address": {
                    "description": "IP address",
                    "type": "string"
                },
                "last_seen": {
                    "description": "Last seen timestamp",
                    "type": "integer"
                },
                "offline": {
                    "description": "Online status",
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "FreeBSDOsInfo.ArcInfo": {
            "type": "object",
            "properties": {
                "arc_used_bytes": {
                    "type": "integer"
                },
                "arc_used_human": {
                    "type": "string"
                }
            }
        },
        "FreeBSDOsInfo.CpuInfo": {
            "type": "object",
            "properties": {
                "cpu_arch": {
                    "type": "string"
                },
                "cpu_cores": {
                    "type": "integer"
                },
                "cpu_model": {
                    "type": "string"
                },
                "cpu_sockets": {
                    "type": "integer"
                },
                "cpu_threads": {
                    "type": "integer"
                },
                "overall_cpus": {
                    "type": "integer"
                }
            }
        },
        "FreeBSDOsInfo.IoStatCpu": {
            "type": "object",
            "properties": {
                "idle_mode": {
                    "description": "% of cpu time in idle mode",
                    "type": "integer"
                },
                "system_interrupt_mode": {
                    "description": "% of cpu time in system interrupt mode",
                    "type": "integer"
                },
                "system_mode": {
                    "description": "% of cpu time in system mode",
                    "type": "integer"
                },
                "user_mode": {
                    "description": "% of cpu time in user mode",
                    "type": "integer"
                },
                "user_nice_mode": {
                    "description": "% of cpu time in user nice mode",
                    "type": "integer"
                }
            }
        },
        "FreeBSDOsInfo.RamInfo": {
            "type": "object",
            "properties": {
                "ram_free_bytes": {
                    "type": "integer"
                },
                "ram_free_human": {
                    "type": "string"
                },
                "ram_overall_bytes": {
                    "type": "integer"
                },
                "ram_overall_human": {
                    "type": "string"
                },
                "ram_used_bytes": {
                    "type": "integer"
                },
                "ram_used_human": {
                    "type": "string"
                }
            }
        },
        "FreeBSDOsInfo.SwapInfo": {
            "type": "object",
            "properties": {
                "swap_free_bytes": {
                    "type": "integer"
                },
                "swap_free_human": {
                    "type": "string"
                },
                "swap_overall_bytes": {
                    "type": "integer"
                },
                "swap_overall_human": {
                    "type": "string"
                },
                "swap_used_bytes": {
                    "type": "integer"
                },
                "swap_used_human": {
                    "type": "string"
                }
            }
        },
        "HandlersHA.HaJail": {
            "type": "object",
            "properties": {
                "current_host": {
                    "type": "string"
                },
                "jail_name": {
                    "type": "string"
                },
                "latest_snapshot": {
                    "type": "string"
                },
                "live": {
                    "type": "boolean"
                },
                "parent_host": {
                    "type": "string"
                }
            }
        },
        "HandlersHA.HaVm": {
            "type": "object",
            "properties": {
                "current_host": {
                    "type": "string"
                },
                "latest_snapshot": {
                    "type": "string"
                },
                "live": {
                    "type": "boolean"
                },
                "parent_host": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                }
            }
        },
        "HosterHost.DnsStaticRecord": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "The record data, e.g. \"192.168.120.1\" for A record, \"mail.example.com\" for CNAME, etc.",
                    "type": "string"
                },
                "domain": {
                    "description": "The domain name, e.g. \"example.com\" or simply \"example\"",
                    "type": "string"
                },
                "type": {
                    "description": "The record type, e.g. \"A\", \"AAAA\", \"CNAME\", \"TXT\", \"MX\", \"NS\", \"SRV\", \"SOA\", \"PTR\"",
                    "type": "string"
                }
            }
        },
        "HosterHost.HostConfig": {
            "type": "object",
            "properties": {
                "active_datasets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dns_search_domain": {
                    "type": "string"
                },
                "dns_servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dns_static_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterHost.DnsStaticRecord"
                    }
                },
                "host_ssh_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterHost.HostConfigKey"
                    }
                },
                "public_vm_image_server": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HosterHost.HostConfigKey": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "key_value": {
                    "type": "string"
                }
            }
        },
        "HosterHostUtils.HostInfo": {
            "type": "object",
            "properties": {
                "all_vms": {
                    "type": "integer"
                },
                "arc_info": {
                    "$ref": "#/definitions/FreeBSDOsInfo.ArcInfo"
                },
                "backup_vms": {
                    "type": "integer"
                },
                "cpu_info": {
                    "$ref": "#/definitions/FreeBSDOsInfo.CpuInfo"
                },
                "cpu_metrics": {
                    "$ref": "#/definitions/FreeBSDOsInfo.IoStatCpu"
                },
                "hostname": {
                    "type": "string"
                },
                "live_vms": {
                    "type": "integer"
                },
                "offline_vms": {
                    "type": "integer"
                },
                "offline_vms_prod": {
                    "type": "integer"
                },
                "ram_info": {
                    "$ref": "#/definitions/FreeBSDOsInfo.RamInfo"
                },
                "services": {
                    "$ref": "#/definitions/HosterHostUtils.HosterServices"
                },
                "swap_info": {
                    "$ref": "#/definitions/FreeBSDOsInfo.SwapInfo"
                },
                "system_major_version": {
                    "type": "string"
                },
                "system_uptime": {
                    "type": "string"
                },
                "vcpu_2_pcpu_ratio": {
                    "type": "number"
                },
                "zpool_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/zfsutils.ZpoolInfo"
                    }
                }
            }
        },
        "HosterHostUtils.HosterServices": {
            "type": "object",
            "properties": {
                "dns_server_pid": {
                    "type": "integer"
                },
                "dns_server_running": {
                    "type": "boolean"
                },
                "dns_server_version": {
                    "type": "string"
                },
                "ha_watchdog_pid": {
                    "type": "integer"
                },
                "ha_watchdog_running": {
                    "type": "boolean"
                },
                "ha_watchdog_version": {
                    "type": "string"
                },
                "hoster_version": {
                    "type": "string"
                },
                "mbuffer_version": {
                    "type": "string"
                },
                "node_exporter_pid": {
                    "type": "integer"
                },
                "node_exporter_running": {
                    "type": "boolean"
                },
                "node_exporter_version": {
                    "type": "string"
                },
                "rest_api_pid": {
                    "type": "integer"
                },
                "rest_api_running": {
                    "type": "boolean"
                },
                "rest_api_version": {
                    "type": "string"
                },
                "scheduler_pid": {
                    "type": "integer"
                },
                "scheduler_running": {
                    "type": "boolean"
                },
                "scheduler_version": {
                    "type": "string"
                },
                "vm_supervisor_version": {
                    "type": "string"
                }
            }
        },
        "HosterJail.DeployInput": {
            "type": "object",
            "properties": {
                "cpu_limit": {
                    "type": "integer"
                },
                "dataset_parent": {
                    "type": "string"
                },
                "dns_server": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "jail_name": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "ram_limit": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                }
            }
        },
        "HosterJailUtils.JailApi": {
            "type": "object",
            "properties": {
                "backup": {
                    "type": "boolean"
                },
                "config_file_append": {
                    "type": "string"
                },
                "cpu_limit_percent": {
                    "type": "integer"
                },
                "current_host": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dns_search_domain": {
                    "type": "string"
                },
                "dns_server": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "failover_strategy": {
                    "description": "Can only be set to one of the two values: \"cireset\" or \"change_parent\"",
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "ram_limit": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "running": {
                    "type": "boolean"
                },
                "shutdown_script": {
                    "type": "string"
                },
                "simple": {
                    "$ref": "#/definitions/HosterJailUtils.JailListSimple"
                },
                "space_free_b": {
                    "type": "integer"
                },
                "space_free_h": {
                    "type": "string"
                },
                "space_used_b": {
                    "type": "integer"
                },
                "space_used_h": {
                    "type": "string"
                },
                "startup_script": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "HosterJailUtils.JailConfig": {
            "type": "object",
            "properties": {
                "config_file_append": {
                    "type": "string"
                },
                "cpu_limit_percent": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dns_search_domain": {
                    "type": "string"
                },
                "dns_server": {
                    "type": "string"
                },
                "failover_strategy": {
                    "description": "Can only be set to one of the two values: \"cireset\" or \"change_parent\"",
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "ram_limit": {
                    "type": "string"
                },
                "shutdown_script": {
                    "type": "string"
                },
                "startup_script": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "HosterJailUtils.JailListSimple": {
            "type": "object",
            "properties": {
                "jail_name": {
                    "type": "string"
                },
                "mount_point": {
                    "$ref": "#/definitions/HosterZfs.MountPoint"
                }
            }
        },
        "HosterNetwork.NetworkConfig": {
            "type": "object",
            "properties": {
                "apply_bridge_address": {
                    "type": "boolean"
                },
                "bridge_interface": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "network_gateway": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "network_range_end": {
                    "type": "string"
                },
                "network_range_start": {
                    "type": "string"
                },
                "network_subnet": {
                    "type": "string"
                }
            }
        },
        "HosterVm.VmDeployInput": {
            "type": "object",
            "properties": {
                "custom_dns_server": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "os_type": {
                    "type": "string"
                },
                "ram": {
                    "type": "string"
                },
                "start_when_ready": {
                    "type": "boolean"
                },
                "target_dataset": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                },
                "vm_name": {
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.Virtio9P": {
            "type": "object",
            "properties": {
                "read_only": {
                    "type": "boolean"
                },
                "share_location": {
                    "type": "string"
                },
                "share_name": {
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.VmApi": {
            "type": "object",
            "properties": {
                "9p_shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.Virtio9P"
                    }
                },
                "backup": {
                    "type": "boolean"
                },
                "cpu_cores": {
                    "type": "integer"
                },
                "cpu_sockets": {
                    "type": "integer"
                },
                "cpu_threads": {
                    "type": "integer"
                },
                "current_host": {
                    "type": "string"
                },
                "custom_options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "disable_xhci": {
                    "type": "boolean"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmDisk"
                    }
                },
                "dns_search_domain": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "failover_strategy": {
                    "description": "Only 2 options are allowed: cireset or change_parent",
                    "type": "string"
                },
                "ignore_host_clock": {
                    "type": "boolean"
                },
                "include_host_ssh_keys": {
                    "type": "boolean"
                },
                "loader": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmNetwork"
                    }
                },
                "os_comment": {
                    "type": "string"
                },
                "os_type": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parent_host": {
                    "type": "string"
                },
                "passthru": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "production": {
                    "type": "boolean"
                },
                "running": {
                    "type": "boolean"
                },
                "simple": {
                    "$ref": "#/definitions/HosterVmUtils.VmListSimple"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uptime": {
                    "type": "string"
                },
                "uptime_unix": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "vga": {
                    "type": "string"
                },
                "vm_ssh_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmSshKey"
                    }
                },
                "vnc_password": {
                    "type": "string"
                },
                "vnc_port": {
                    "type": "integer"
                },
                "vnc_resolution": {
                    "type": "integer"
                }
            }
        },
        "HosterVmUtils.VmConfig": {
            "type": "object",
            "properties": {
                "9p_shares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.Virtio9P"
                    }
                },
                "cpu_cores": {
                    "type": "integer"
                },
                "cpu_sockets": {
                    "type": "integer"
                },
                "cpu_threads": {
                    "type": "integer"
                },
                "custom_options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "disable_xhci": {
                    "type": "boolean"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmDisk"
                    }
                },
                "dns_search_domain": {
                    "type": "string"
                },
                "failover_strategy": {
                    "description": "Only 2 options are allowed: cireset or change_parent",
                    "type": "string"
                },
                "ignore_host_clock": {
                    "type": "boolean"
                },
                "include_host_ssh_keys": {
                    "type": "boolean"
                },
                "loader": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmNetwork"
                    }
                },
                "os_comment": {
                    "type": "string"
                },
                "os_type": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parent_host": {
                    "type": "string"
                },
                "passthru": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "production": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uuid": {
                    "type": "string"
                },
                "vga": {
                    "type": "string"
                },
                "vm_ssh_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HosterVmUtils.VmSshKey"
                    }
                },
                "vnc_password": {
                    "type": "string"
                },
                "vnc_port": {
                    "type": "integer"
                },
                "vnc_resolution": {
                    "type": "integer"
                }
            }
        },
        "HosterVmUtils.VmDisk": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "disk_image": {
                    "type": "string"
                },
                "disk_input_size": {
                    "type": "integer"
                },
                "disk_location": {
                    "type": "string"
                },
                "disk_type": {
                    "description": "this is a disk driver type, e.g. virtio-blk, nvme, ahci-hd, ahci-cd.",
                    "type": "string"
                },
                "total_bytes": {
                    "type": "integer"
                },
                "total_human": {
                    "type": "string"
                },
                "used_bytes": {
                    "type": "integer"
                },
                "used_human": {
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.VmListSimple": {
            "type": "object",
            "properties": {
                "dsName": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "mountpoint": {
                    "description": "ZFS Dataset Mountpoint. For example: \"/tank/vm-encrypted\"",
                    "type": "string"
                },
                "vmName": {
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.VmNetwork": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "network_adaptor_type": {
                    "description": "this is a network driver type, e.g. virtio-net or e1000, rename to network_driver in the v2 release",
                    "type": "string"
                },
                "network_bridge": {
                    "description": "this is a network name",
                    "type": "string"
                },
                "network_mac": {
                    "description": "rename to mac_address in the v2 release",
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.VmSshKey": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "key_owner": {
                    "type": "string"
                },
                "key_value": {
                    "type": "string"
                }
            }
        },
        "HosterVmUtils.VmTemplate": {
            "type": "object",
            "properties": {
                "mountpoint": {
                    "description": "Mountpoint (e.g. /tank/vm-encrypted/template-ubuntu2404)",
                    "type": "string"
                },
                "name": {
                    "description": "Dataset name/path (e.g. tank/vm-encrypted/template-ubuntu2404)",
                    "type": "string"
                },
                "short_name": {
                    "description": "Short name, template- is trimmed (e.g. ubuntu2404)",
                    "type": "string"
                },
                "size": {
                    "description": "Size in bytes",
                    "type": "integer"
                },
                "size_human": {
                    "description": "Human-readable size (e.g. 5.0G)",
                    "type": "string"
                }
            }
        },
        "HosterZfs.MountPoint": {
            "type": "object",
            "properties": {
                "dsName": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "mountpoint": {
                    "description": "ZFS Dataset Mountpoint. For example: \"/tank/vm-encrypted\"",
                    "type": "string"
                }
            }
        },
        "RestApiConfig.HaNode": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "backup_node": {
                    "type": "boolean"
                },
                "failover_strategy": {
                    "type": "string"
                },
                "failover_time": {
                    "type": "integer"
                },
                "hostname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "registered": {
                    "type": "boolean"
                },
                "startup_time": {
                    "type": "integer"
                },
                "times_failed": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "RestApiConfig.RestApiConfig": {
            "type": "object",
            "properties": {
                "bind": {
                    "description": "can be empty, 0.0.0.0 used by default",
                    "type": "string"
                },
                "ha_debug": {
                    "description": "ha_debug allows you to test the HA Mode, because instead of applying the real actions, ha_debug will only log them instead",
                    "type": "boolean"
                },
                "ha_mode": {
                    "description": "whether to start the API server in an HA cluster mode",
                    "type": "boolean"
                },
                "http_auth": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ha_user": {
                                "description": "HA User has access to a different set of routes than the regular REST API user, and vise versa. Has been implemented to limit per-user API exposure, aka normal user is not authorized to call HA related routes.",
                                "type": "boolean"
                            },
                            "password": {
                                "description": "password for the basic HTTP auth",
                                "type": "string"
                            },
                            "user": {
                                "description": "user name for the basic HTTP auth",
                                "type": "string"
                            }
                        }
                    }
                },
                "log_level": {
                    "description": "DEBUG, INFO, WARN, or ERROR",
                    "type": "string"
                },
                "port": {
                    "description": "port to bind the HTTP server to",
                    "type": "integer"
                },
                "protocol": {
                    "description": "http or https -\u003e not implemented yet, will require another parameter: key_location",
                    "type": "string"
                }
            }
        },
        "handlers.DatasetEncryptionInput": {
            "type": "object",
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.DatasetInfo": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "available_human": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "mounted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "total_human": {
                    "type": "string"
                },
                "used": {
                    "type": "integer"
                },
                "used_human": {
                    "type": "string"
                }
            }
        },
        "handlers.DnsSearchDomainInput": {
            "type": "object",
            "properties": {
                "dns_search_domain": {
                    "type": "string"
                }
            }
        },
        "handlers.HostAuthSshKeyInput": {
            "type": "object",
            "properties": {
                "key_value": {
                    "type": "string"
                }
            }
        },
        "handlers.JailCloneInput": {
            "type": "object",
            "properties": {
                "jail_name": {
                    "type": "string"
                },
                "new_jail_name": {
                    "type": "string"
                },
                "snapshot_name": {
                    "type": "string"
                }
            }
        },
        "handlers.JailDnsInput": {
            "type": "object",
            "properties": {
                "dns_server": {
                    "type": "string"
                },
                "search_domain": {
                    "type": "string"
                }
            }
        },
        "handlers.JailNetworkInput": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "network_bridge": {
                    "type": "string"
                }
            }
        },
        "handlers.JailShells": {
            "type": "object",
            "properties": {
                "available_shells": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.ResourceDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "handlers.SnapshotInput": {
            "type": "object",
            "properties": {
                "new_res_name": {
                    "description": "Used in clone operation, e.g. newVmName, the internal call will automatically append the dataset name",
                    "type": "string"
                },
                "res_name": {
                    "description": "VM or Jail name",
                    "type": "string"
                },
                "snapshot_description": {
                    "description": "Description of the snapshot",
                    "type": "string"
                },
                "snapshot_name": {
                    "description": "Full snapshot name, including the whole path, e.g. \"tank/vm-encrypted/vmTest1@snap1\"",
                    "type": "string"
                },
                "snapshot_type": {
                    "description": "\"hourly\", \"daily\", \"weekly\", \"monthly\", \"frequent\"",
                    "type": "string"
                },
                "snapshots_to_keep": {
                    "description": "How many snapshots to keep, e.g. 5",
                    "type": "integer"
                }
            }
        },
        "handlers.SnapshotName": {
            "type": "object",
            "properties": {
                "resource_name": {
                    "description": "VM or Jail name",
                    "type": "string"
                },
                "snapshot_name": {
                    "description": "Full snapshot name, including the whole path, e.g. \"tank/vm-encrypted/vmTest1@snap1\"",
                    "type": "string"
                }
            }
        },
        "handlers.SshKeyInput": {
            "type": "object",
            "properties": {
                "key_comment": {
                    "type": "string"
                },
                "key_value": {
                    "type": "string"
                }
            }
        },
        "handlers.SwaggerError": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.SwaggerSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "success",
                    "type": "string"
                }
            }
        },
        "handlers.TagInput": {
            "type": "object",
            "properties": {
                "tag": {
                    "type": "string"
                }
            }
        },
        "handlers.UpstreamDnsInput": {
            "type": "object",
            "properties": {
                "dns_server": {
                    "type": "string"
                }
            }
        },
        "handlers.VmCloneInput": {
            "type": "object",
            "properties": {
                "new_vm_name": {
                    "type": "string"
                },
                "snapshot_name": {
                    "type": "string"
                },
                "vm_name": {
                    "type": "string"
                }
            }
        },
        "handlers.VmCpuInput": {
            "type": "object",
            "properties": {
                "cpu_cores": {
                    "type": "integer"
                },
                "cpu_sockets": {
                    "type": "integer"
                },
                "cpu_threads": {
                    "type": "integer"
                }
            }
        },
        "handlers.VmDiskExpandInput": {
            "type": "object",
            "properties": {
                "disk_image": {
                    "type": "string"
                },
                "expansion_size": {
                    "type": "integer"
                }
            }
        },
        "handlers.VmOsSettings": {
            "type": "object",
            "properties": {
                "os_comment": {
                    "type": "string"
                },
                "os_type": {
                    "type": "string"
                }
            }
        },
        "handlers.VmRamInput": {
            "type": "object",
            "properties": {
                "bytes_value": {
                    "type": "string"
                },
                "ram_amount": {
                    "type": "integer"
                }
            }
        },
        "handlers.VmTemplateLink": {
            "type": "object",
            "properties": {
                "vm_template_link": {
                    "type": "string"
                }
            }
        },
        "handlers.ZfsDatasetInput": {
            "type": "object",
            "properties": {
                "dataset": {
                    "type": "string"
                }
            }
        },
        "rctl.RctMetrics": {
            "type": "object",
            "properties": {
                "code_dump_size": {
                    "type": "integer"
                },
                "cpu_time": {
                    "type": "integer"
                },
                "data_size": {
                    "type": "integer"
                },
                "max_proc": {
                    "type": "integer"
                },
                "memory_locked": {
                    "type": "integer"
                },
                "memory_use": {
                    "type": "integer"
                },
                "nsemop": {
                    "type": "integer"
                },
                "nthr": {
                    "type": "integer"
                },
                "open_files": {
                    "type": "integer"
                },
                "p_cpu": {
                    "type": "integer"
                },
                "read_bps": {
                    "type": "integer"
                },
                "read_iops": {
                    "type": "integer"
                },
                "stack_size": {
                    "type": "integer"
                },
                "vmemory_use": {
                    "type": "integer"
                },
                "wall_clock": {
                    "type": "integer"
                },
                "write_bps": {
                    "type": "integer"
                },
                "write_iops": {
                    "type": "integer"
                }
            }
        },
        "zfsutils.SnapshotInfo": {
            "type": "object",
            "properties": {
                "snapshot_clones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "snapshot_dataset": {
                    "description": "Dataset name, e.g. zroot/vm-encrypted/test-vm-0107",
                    "type": "string"
                },
                "snapshot_description": {
                    "type": "string"
                },
                "snapshot_locked": {
                    "type": "boolean"
                },
                "snapshot_name": {
                    "description": "Full snapshot path, or in other words it's full \"ZFS name\", e.g. zroot/vm-encrypted/test-vm-0107@replication_2023-08-14_16-49-08",
                    "type": "string"
                },
                "snapshot_short_name": {
                    "description": "Short snapshot name, e.g. replication_2023-08-14_16-49-08",
                    "type": "string"
                },
                "snapshot_size_bytes": {
                    "type": "integer"
                },
                "snapshot_size_human": {
                    "type": "string"
                }
            }
        },
        "zfsutils.ZpoolInfo": {
            "type": "object",
            "properties": {
                "allocated_bytes": {
                    "type": "integer"
                },
                "allocated_human": {
                    "type": "string"
                },
                "fragmentation": {
                    "type": "integer"
                },
                "free_bytes": {
                    "type": "integer"
                },
                "free_human": {
                    "type": "string"
                },
                "healthy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "size_bytes": {
                    "type": "integer"
                },
                "size_human": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "/api/v2",
	Schemes:          []string{},
	Title:            "Hoster Node REST API Docs",
	Description:      "`NOTE!` This REST API HTTP endpoint is located directly on the `Hoster` node.<br><br>The API should ideally be integrated into another system (e.g. a user-accessible back-end server), and not interacted with directly.<br><br>Please, take an extra care with the things you execute here, because some of them may be disruptive or non-revertible (e.g. vm destroy, snapshot rollback, host reboot, etc).",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
