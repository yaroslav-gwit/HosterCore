basePath: /api/v2
definitions:
  FreeBSDOsInfo.ArcInfo:
    properties:
      arc_used_bytes:
        type: integer
      arc_used_human:
        type: string
    type: object
  FreeBSDOsInfo.CpuInfo:
    properties:
      cpu_arch:
        type: string
      cpu_cores:
        type: integer
      cpu_model:
        type: string
      cpu_sockets:
        type: integer
      cpu_threads:
        type: integer
      overall_cpus:
        type: integer
    type: object
  FreeBSDOsInfo.IoStatCpu:
    properties:
      idle_mode:
        description: '% of cpu time in idle mode'
        type: integer
      system_interrupt_mode:
        description: '% of cpu time in system interrupt mode'
        type: integer
      system_mode:
        description: '% of cpu time in system mode'
        type: integer
      user_mode:
        description: '% of cpu time in user mode'
        type: integer
      user_nice_mode:
        description: '% of cpu time in user nice mode'
        type: integer
    type: object
  FreeBSDOsInfo.RamInfo:
    properties:
      ram_free_bytes:
        type: integer
      ram_free_human:
        type: string
      ram_overall_bytes:
        type: integer
      ram_overall_human:
        type: string
      ram_used_bytes:
        type: integer
      ram_used_human:
        type: string
    type: object
  FreeBSDOsInfo.SwapInfo:
    properties:
      swap_free_bytes:
        type: integer
      swap_free_human:
        type: string
      swap_overall_bytes:
        type: integer
      swap_overall_human:
        type: string
      swap_used_bytes:
        type: integer
      swap_used_human:
        type: string
    type: object
  HandlersHA.HaJail:
    properties:
      current_host:
        type: string
      jail_name:
        type: string
      latest_snapshot:
        type: string
      live:
        type: boolean
      parent_host:
        type: string
    type: object
  HandlersHA.HaVm:
    properties:
      current_host:
        type: string
      latest_snapshot:
        type: string
      live:
        type: boolean
      parent_host:
        type: string
      vm_name:
        type: string
    type: object
  HosterHost.DnsStaticRecord:
    properties:
      data:
        description: The record data, e.g. "192.168.120.1" for A record, "mail.example.com"
          for CNAME, etc.
        type: string
      domain:
        description: The domain name, e.g. "example.com" or simply "example"
        type: string
      type:
        description: The record type, e.g. "A", "AAAA", "CNAME", "TXT", "MX", "NS",
          "SRV", "SOA", "PTR"
        type: string
    type: object
  HosterHost.HostConfig:
    properties:
      active_datasets:
        items:
          type: string
        type: array
      dns_search_domain:
        type: string
      dns_servers:
        items:
          type: string
        type: array
      dns_static_records:
        items:
          $ref: '#/definitions/HosterHost.DnsStaticRecord'
        type: array
      host_ssh_keys:
        items:
          $ref: '#/definitions/HosterHost.HostConfigKey'
        type: array
      public_vm_image_server:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  HosterHost.HostConfigKey:
    properties:
      comment:
        type: string
      key_value:
        type: string
    type: object
  HosterHostUtils.HostInfo:
    properties:
      all_vms:
        type: integer
      arc_info:
        $ref: '#/definitions/FreeBSDOsInfo.ArcInfo'
      backup_vms:
        type: integer
      cpu_info:
        $ref: '#/definitions/FreeBSDOsInfo.CpuInfo'
      cpu_metrics:
        $ref: '#/definitions/FreeBSDOsInfo.IoStatCpu'
      hostname:
        type: string
      live_vms:
        type: integer
      offline_vms:
        type: integer
      offline_vms_prod:
        type: integer
      ram_info:
        $ref: '#/definitions/FreeBSDOsInfo.RamInfo'
      services:
        $ref: '#/definitions/HosterHostUtils.HosterServices'
      swap_info:
        $ref: '#/definitions/FreeBSDOsInfo.SwapInfo'
      system_major_version:
        type: string
      system_uptime:
        type: string
      vcpu_2_pcpu_ratio:
        type: number
      zpool_list:
        items:
          $ref: '#/definitions/zfsutils.ZpoolInfo'
        type: array
    type: object
  HosterHostUtils.HosterServices:
    properties:
      dns_server_pid:
        type: integer
      dns_server_running:
        type: boolean
      dns_server_version:
        type: string
      ha_watchdog_pid:
        type: integer
      ha_watchdog_running:
        type: boolean
      ha_watchdog_version:
        type: string
      hoster_version:
        type: string
      mbuffer_version:
        type: string
      node_exporter_pid:
        type: integer
      node_exporter_running:
        type: boolean
      node_exporter_version:
        type: string
      rest_api_pid:
        type: integer
      rest_api_running:
        type: boolean
      rest_api_version:
        type: string
      scheduler_pid:
        type: integer
      scheduler_running:
        type: boolean
      scheduler_version:
        type: string
      vm_supervisor_version:
        type: string
    type: object
  HosterJail.DeployInput:
    properties:
      cpu_limit:
        type: integer
      dataset_parent:
        type: string
      dns_server:
        type: string
      ip_address:
        type: string
      jail_name:
        type: string
      network_name:
        type: string
      production:
        type: boolean
      ram_limit:
        type: string
      release:
        type: string
    type: object
  HosterJailUtils.JailApi:
    properties:
      backup:
        type: boolean
      config_file_append:
        type: string
      cpu_limit_percent:
        type: integer
      current_host:
        type: string
      description:
        type: string
      dns_search_domain:
        type: string
      dns_server:
        type: string
      encrypted:
        type: boolean
      ip_address:
        type: string
      name:
        type: string
      network:
        type: string
      parent:
        type: string
      production:
        type: boolean
      ram_limit:
        type: string
      release:
        type: string
      running:
        type: boolean
      shutdown_script:
        type: string
      simple:
        $ref: '#/definitions/HosterJailUtils.JailListSimple'
      space_free_b:
        type: integer
      space_free_h:
        type: string
      space_used_b:
        type: integer
      space_used_h:
        type: string
      startup_script:
        type: string
      tags:
        items:
          type: string
        type: array
      timezone:
        type: string
      uptime:
        type: string
      uuid:
        type: string
    type: object
  HosterJailUtils.JailListSimple:
    properties:
      jail_name:
        type: string
      mount_point:
        $ref: '#/definitions/HosterZfs.MountPoint'
    type: object
  HosterNetwork.NetworkConfig:
    properties:
      apply_bridge_address:
        type: boolean
      bridge_interface:
        type: string
      comment:
        type: string
      network_gateway:
        type: string
      network_name:
        type: string
      network_range_end:
        type: string
      network_range_start:
        type: string
      network_subnet:
        type: string
    type: object
  HosterVm.VmDeployInput:
    properties:
      custom_dns_server:
        type: string
      ip_address:
        type: string
      network_name:
        type: string
      os_type:
        type: string
      ram:
        type: string
      start_when_ready:
        type: boolean
      target_dataset:
        type: string
      vcpus:
        type: integer
      vm_name:
        type: string
    type: object
  HosterVmUtils.Virtio9P:
    properties:
      read_only:
        type: boolean
      share_location:
        type: string
      share_name:
        type: string
    type: object
  HosterVmUtils.VmApi:
    properties:
      9p_shares:
        items:
          $ref: '#/definitions/HosterVmUtils.Virtio9P'
        type: array
      backup:
        type: boolean
      cpu_cores:
        type: integer
      cpu_sockets:
        type: integer
      cpu_threads:
        type: integer
      current_host:
        type: string
      description:
        type: string
      disable_xhci:
        type: boolean
      disks:
        items:
          $ref: '#/definitions/HosterVmUtils.VmDisk'
        type: array
      dns_search_domain:
        type: string
      encrypted:
        type: boolean
      ignore_host_clock:
        type: boolean
      include_host_ssh_keys:
        type: boolean
      loader:
        type: string
      memory:
        type: string
      name:
        type: string
      networks:
        items:
          $ref: '#/definitions/HosterVmUtils.VmNetwork'
        type: array
      os_comment:
        type: string
      os_type:
        type: string
      owner:
        type: string
      parent_host:
        type: string
      passthru:
        items:
          type: string
        type: array
      production:
        description: LiveStatus         string      `json:"live_status"`
        type: boolean
      running:
        type: boolean
      simple:
        $ref: '#/definitions/HosterVmUtils.VmListSimple'
      tags:
        items:
          type: string
        type: array
      uptime:
        type: string
      uptime_unix:
        type: integer
      uuid:
        type: string
      vga:
        type: string
      vm_ssh_keys:
        items:
          $ref: '#/definitions/HosterVmUtils.VmSshKey'
        type: array
      vnc_password:
        type: string
      vnc_port:
        type: integer
      vnc_resolution:
        type: integer
    type: object
  HosterVmUtils.VmConfig:
    properties:
      9p_shares:
        items:
          $ref: '#/definitions/HosterVmUtils.Virtio9P'
        type: array
      cpu_cores:
        type: integer
      cpu_sockets:
        type: integer
      cpu_threads:
        type: integer
      description:
        type: string
      disable_xhci:
        type: boolean
      disks:
        items:
          $ref: '#/definitions/HosterVmUtils.VmDisk'
        type: array
      dns_search_domain:
        type: string
      ignore_host_clock:
        type: boolean
      include_host_ssh_keys:
        type: boolean
      loader:
        type: string
      memory:
        type: string
      networks:
        items:
          $ref: '#/definitions/HosterVmUtils.VmNetwork'
        type: array
      os_comment:
        type: string
      os_type:
        type: string
      owner:
        type: string
      parent_host:
        type: string
      passthru:
        items:
          type: string
        type: array
      production:
        description: LiveStatus         string      `json:"live_status"`
        type: boolean
      tags:
        items:
          type: string
        type: array
      uuid:
        type: string
      vga:
        type: string
      vm_ssh_keys:
        items:
          $ref: '#/definitions/HosterVmUtils.VmSshKey'
        type: array
      vnc_password:
        type: string
      vnc_port:
        type: integer
      vnc_resolution:
        type: integer
    type: object
  HosterVmUtils.VmDisk:
    properties:
      comment:
        type: string
      disk_image:
        type: string
      disk_location:
        type: string
      disk_type:
        type: string
      total_bytes:
        type: integer
      total_human:
        type: string
      used_bytes:
        type: integer
      used_human:
        type: string
    type: object
  HosterVmUtils.VmListSimple:
    properties:
      dsName:
        type: string
      encrypted:
        type: boolean
      mountpoint:
        description: 'ZFS Dataset Mountpoint. For example: "/tank/vm-encrypted"'
        type: string
      vmName:
        type: string
    type: object
  HosterVmUtils.VmNetwork:
    properties:
      comment:
        type: string
      ip_address:
        type: string
      network_adaptor_type:
        type: string
      network_bridge:
        description: is this a network name?
        type: string
      network_mac:
        type: string
    type: object
  HosterVmUtils.VmSshKey:
    properties:
      comment:
        type: string
      key_owner:
        type: string
      key_value:
        type: string
    type: object
  HosterZfs.MountPoint:
    properties:
      dsName:
        type: string
      encrypted:
        type: boolean
      mountpoint:
        description: 'ZFS Dataset Mountpoint. For example: "/tank/vm-encrypted"'
        type: string
    type: object
  RestApiConfig.HaNode:
    properties:
      address:
        type: string
      backup_node:
        type: boolean
      failover_strategy:
        type: string
      failover_time:
        type: integer
      hostname:
        type: string
      password:
        type: string
      port:
        type: string
      protocol:
        type: string
      registered:
        type: boolean
      startup_time:
        type: integer
      times_failed:
        type: integer
      user:
        type: string
    type: object
  RestApiConfig.RestApiConfig:
    properties:
      bind:
        description: can be empty, 0.0.0.0 used by default
        type: string
      ha_debug:
        description: ha_debug allows you to test the HA Mode, because instead of applying
          the real actions, ha_debug will only log them instead
        type: boolean
      ha_mode:
        description: whether to start the API server in an HA cluster mode
        type: boolean
      http_auth:
        items:
          properties:
            ha_user:
              description: HA User has access to a different set of routes than the
                regular REST API user, and vise versa. Has been implemented to limit
                per-user API exposure, aka normal user is not authorized to call HA
                related routes.
              type: boolean
            password:
              description: password for the basic HTTP auth
              type: string
            user:
              description: user name for the basic HTTP auth
              type: string
          type: object
        type: array
      log_level:
        description: DEBUG, INFO, WARN, or ERROR
        type: string
      port:
        description: port to bind the HTTP server to
        type: integer
      protocol:
        description: 'http or https -> not implemented yet, will require another parameter:
          key_location'
        type: string
    type: object
  handlers.DatasetEncryptionInput:
    properties:
      dataset:
        type: string
      password:
        type: string
    type: object
  handlers.DatasetInfo:
    properties:
      available:
        type: integer
      available_human:
        type: string
      encrypted:
        type: boolean
      mounted:
        type: boolean
      name:
        type: string
      total:
        type: integer
      total_human:
        type: string
      used:
        type: integer
      used_human:
        type: string
    type: object
  handlers.DnsSearchDomainInput:
    properties:
      dns_search_domain:
        type: string
    type: object
  handlers.HostAuthSshKeyInput:
    properties:
      key_value:
        type: string
    type: object
  handlers.JailCloneInput:
    properties:
      jail_name:
        type: string
      new_jail_name:
        type: string
      snapshot_name:
        type: string
    type: object
  handlers.SnapshotInput:
    properties:
      new_res_name:
        description: Used in clone operation, e.g. newVmName, the internal call will
          automatically append the dataset name
        type: string
      res_name:
        description: VM or Jail name
        type: string
      snapshot_name:
        description: Full snapshot name, including the whole path, e.g. "tank/vm-encrypted/vmTest1@snap1"
        type: string
      snapshot_type:
        description: '"hourly", "daily", "weekly", "monthly", "frequent"'
        type: string
      snapshots_to_keep:
        description: How many snapshots to keep, e.g. 5
        type: integer
    type: object
  handlers.SnapshotName:
    properties:
      resource_name:
        description: VM or Jail name
        type: string
      snapshot_name:
        description: Full snapshot name, including the whole path, e.g. "tank/vm-encrypted/vmTest1@snap1"
        type: string
    type: object
  handlers.SshKeyInput:
    properties:
      key_comment:
        type: string
      key_value:
        type: string
    type: object
  handlers.SwaggerError:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  handlers.SwaggerSuccess:
    properties:
      message:
        description: success
        type: string
    type: object
  handlers.UpstreamDnsInput:
    properties:
      dns_server:
        type: string
    type: object
  handlers.VmCloneInput:
    properties:
      new_vm_name:
        type: string
      snapshot_name:
        type: string
      vm_name:
        type: string
    type: object
  handlers.VmCpuInput:
    properties:
      cpu_cores:
        type: integer
      cpu_sockets:
        type: integer
      cpu_threads:
        type: integer
    type: object
  handlers.VmRamInput:
    properties:
      amount:
        type: integer
      value:
        type: string
    type: object
  handlers.VmStopInput:
    properties:
      force_cleanup:
        description: Kill the VM supervisor directly (useful in the situations where
          you want to destroy the VM, or roll it back to a previous snapshot)
        type: boolean
      force_stop:
        description: Send a SIGKILL instead of a graceful SIGTERM
        type: boolean
      vm_name:
        type: string
    type: object
  handlers.VmTemplateLink:
    properties:
      vm_template_link:
        type: string
    type: object
  rctl.RctMetrics:
    properties:
      code_dump_size:
        type: integer
      cpu_time:
        type: integer
      data_size:
        type: integer
      max_proc:
        type: integer
      memory_locked:
        type: integer
      memory_use:
        type: integer
      nsemop:
        type: integer
      nthr:
        type: integer
      open_files:
        type: integer
      p_cpu:
        type: integer
      read_bps:
        type: integer
      read_iops:
        type: integer
      stack_size:
        type: integer
      vmemory_use:
        type: integer
      wall_clock:
        type: integer
      write_bps:
        type: integer
      write_iops:
        type: integer
    type: object
  zfsutils.SnapshotInfo:
    properties:
      snapshot_clones:
        items:
          type: string
        type: array
      snapshot_dataset:
        type: string
      snapshot_description:
        type: string
      snapshot_locked:
        type: boolean
      snapshot_name:
        description: Full snapshot path, or in other words it's full "ZFS name", e.g.
          zroot/vm-encrypted/test-vm-0107@replication_2023-08-14_16-49-08
        type: string
      snapshot_short_name:
        type: string
      snapshot_size_bytes:
        type: integer
      snapshot_size_human:
        type: string
    type: object
  zfsutils.ZpoolInfo:
    properties:
      allocated_bytes:
        type: integer
      allocated_human:
        type: string
      fragmentation:
        type: integer
      free_bytes:
        type: integer
      free_human:
        type: string
      healthy:
        type: boolean
      name:
        type: string
      size_bytes:
        type: integer
      size_human:
        type: string
    type: object
info:
  contact: {}
  description: '`NOTE!` This REST API HTTP endpoint is located directly on the `Hoster`
    node.<br><br>The API should ideally be integrated into another system (e.g. a
    user-accessible back-end server), and not interacted with directly.<br><br>Please,
    take an extra care with the things you execute here, because some of them may
    be disruptive or non-revertible (e.g. vm destroy, snapshot rollback, host reboot,
    etc).'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Hoster Node REST API Docs
  version: "2.0"
paths:
  /dataset/all:
    get:
      description: 'Get active dataset list.<br>`AUTH`: Only REST user is allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.DatasetInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get active dataset list.
      tags:
      - Datasets
  /dataset/unlock:
    post:
      description: 'Unlock an encrypted dataset.<br>`AUTH`: Only REST user is allowed.'
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.DatasetEncryptionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Unlock an encrypted dataset.
      tags:
      - Datasets
  /ha/jail-list:
    get:
      description: Handle the HA enabled Jail list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HandlersHA.HaJail'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Handle the HA enabled Jail list.
      tags:
      - HA
  /ha/ping:
    post:
      description: Handle the HA node ping.
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/RestApiConfig.HaNode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Handle the HA node ping.
      tags:
      - HA
  /ha/register:
    post:
      description: Handle the HA node registration.
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/RestApiConfig.HaNode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Handle the HA node registration.
      tags:
      - HA
  /ha/terminate:
    post:
      description: Handle the HA graceful termination signal.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Handle the HA graceful termination signal.
      tags:
      - HA
  /ha/vm-list:
    get:
      description: Handle the HA enabled VM list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HandlersHA.HaVm'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Handle the HA enabled VM list.
      tags:
      - HA
  /health:
    get:
      description: Simple function, that returns this REST API server health status.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
      summary: REST API server health status.
      tags:
      - Health
  /health/auth/any:
    get:
      description: 'Check if `any` of the two users can log in. Useful for the routes
        which are required by both users: regular and HA.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Check `any` user authentication.
      tags:
      - Health
  /health/auth/ha:
    get:
      description: Check the `HA` user authentication.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Check the `HA` user authentication.
      tags:
      - Health
  /health/auth/regular:
    get:
      description: Check the `regular` user authentication.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Check the `regular` user authentication.
      tags:
      - Health
  /host/info:
    get:
      description: 'Get Host info.<br>`AUTH`: Both users are allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HosterHostUtils.HostInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get Host info.
      tags:
      - Host
  /host/readme:
    get:
      description: Get README.MD for this particular Hoster node.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get README.MD for this particular Hoster node.
      tags:
      - Host
  /host/settings:
    get:
      description: 'Get Host Settings.<br>`AUTH`: only REST user is allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HosterHost.HostConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get Host Settings.
      tags:
      - Host
  /host/settings/add-ssh-key:
    post:
      description: Add a new VM SSH access key.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SshKeyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new VM SSH access key.
      tags:
      - Host
  /host/settings/add-tag/{tag}:
    post:
      description: Add a new Host-related tag.
      parameters:
      - description: Host Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new Host-related tag.
      tags:
      - Tags
  /host/settings/add-upstream-dns:
    post:
      description: Add a new upstream DNS server.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.UpstreamDnsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new upstream DNS server.
      tags:
      - Host
  /host/settings/api:
    get:
      description: 'Get RestAPI Settings (including HA settings).<br>`AUTH`: only
        REST user is allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RestApiConfig.RestApiConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get RestAPI Settings (including HA settings).
      tags:
      - Host
  /host/settings/delete-ssh-key:
    delete:
      description: Delete an existing SSH key.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SshKeyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Delete an existing SSH key.
      tags:
      - Host
  /host/settings/delete-tag/{tag}:
    delete:
      description: Delete an existing Host-related tag.
      parameters:
      - description: Host Tag
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Delete an existing Host-related tag.
      tags:
      - Tags
  /host/settings/delete-upstream-dns:
    delete:
      description: Delete an upstream DNS server.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.UpstreamDnsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Delete an upstream DNS server.
      tags:
      - Host
  /host/settings/dns-search-domain:
    post:
      description: Post a new DNS search domain.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.DnsSearchDomainInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Post a new DNS search domain.
      tags:
      - Host
  /host/settings/ssh-auth-key:
    post:
      description: Add a new host-level authorized SSH key.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.HostAuthSshKeyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new host-level authorized SSH key.
      tags:
      - Host
  /host/settings/vm-templates:
    post:
      description: Post an updated VM template site.
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.VmTemplateLink'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Post an updated VM template site.
      tags:
      - Host
  /jail/all:
    get:
      description: 'Get the list of all Jails, including the information about them.<br>`AUTH`:
        Both users are allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HosterJailUtils.JailApi'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all Jails.
      tags:
      - Jails
  /jail/all/cache:
    get:
      description: 'Get the list of all Jails, including the information about them
        (cached version).<br>`AUTH`: Both users are allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HosterJailUtils.JailApi'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all Jails (cached version).
      tags:
      - Jails
  /jail/clone:
    post:
      description: 'Clone the Jail using it''s name, and optionally specify the snapshot
        name to be used for cloning.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.JailCloneInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Clone the Jail.
      tags:
      - Jails
  /jail/deploy:
    post:
      description: 'Deploy a new Jail using a set of defined parameters.<br>`AUTH`:
        Only `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/HosterJail.DeployInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Deploy a new Jail.
      tags:
      - Jails
  /jail/destroy/{jail_name}:
    delete:
      description: '`DANGER` - destructive operation!<br><br>Destroy a specific Jail
        using it''s name as a parameter.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Jail Name
        in: path
        name: jail_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Destroy a specific Jail.
      tags:
      - Jails
  /jail/info/{jail_name}:
    get:
      description: 'Get Jail info.<br>`AUTH`: Both users are allowed.'
      parameters:
      - description: Jail Name
        in: path
        name: jail_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HosterJailUtils.JailApi'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get Jail info.
      tags:
      - Jails
  /jail/start/{jail_name}:
    post:
      description: 'Start a specific Jail using it''s name as a parameter.<br>`AUTH`:
        Both users are allowed.'
      parameters:
      - description: Jail Name
        in: path
        name: jail_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Start a specific Jail.
      tags:
      - Jails
  /jail/stop/{jail_name}:
    post:
      description: 'Stop a specific Jail using it''s name as a parameter.<br>`AUTH`:
        Both users are allowed.'
      parameters:
      - description: Jail Name
        in: path
        name: jail_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Stop a specific Jail.
      tags:
      - Jails
  /jail/template/list:
    get:
      description: 'Get the list of all Jail templates.<br>`AUTH`: Only `rest` user
        is allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all Jail templates.
      tags:
      - Jails
  /metrics/jail/{jail_name}:
    get:
      description: 'Get the RCTL metrics for a specific Jail.<br>`AUTH`: Only `rest`
        user is allowed.'
      parameters:
      - description: Jail Name
        in: path
        name: jail_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rctl.RctMetrics'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get the RCTL metrics for a specific Jail.
      tags:
      - Metrics
      - Jails
  /metrics/vm/{vm_name}:
    get:
      description: 'Get the RCTL metrics for a specific VM.<br>`AUTH`: Only `rest`
        user is allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rctl.RctMetrics'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get the RCTL metrics for a specific VM.
      tags:
      - Metrics
      - VMs
  /network/add-new-network:
    post:
      description: 'Add a new network.<br>`AUTH`: Only REST user is allowed.'
      parameters:
      - description: Request Payload
        in: body
        name: Input
        required: true
        schema:
          items:
            $ref: '#/definitions/HosterNetwork.NetworkConfig'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new network.
      tags:
      - Networks
  /network/all:
    get:
      description: 'Get the networks list.<br>`AUTH`: Only REST user is allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HosterNetwork.NetworkConfig'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get the networks list.
      tags:
      - Networks
  /snapshot/all/{res_name}:
    get:
      description: 'List all snapshots for any given VM or a Jail.<br>`AUTH`: Both
        users are allowed.'
      parameters:
      - description: Resource Name (Jail or VM)
        in: path
        name: res_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/zfsutils.SnapshotInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all snapshots for any given VM or a Jail.
      tags:
      - Snapshots
  /snapshot/all/{res_name}/cache:
    get:
      description: 'List all snapshots for any given VM or a Jail (cached version).<br>`AUTH`:
        Both users are allowed.'
      parameters:
      - description: Resource Name (Jail or VM)
        in: path
        name: res_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/zfsutils.SnapshotInfo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all snapshots for any given VM or a Jail (cached version).
      tags:
      - Snapshots
  /snapshot/clone:
    post:
      description: 'Clone an existing VM or Jail snapshot.<br>`AUTH`: Only `rest`
        user is allowed.<br>'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SnapshotInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Clone an existing VM or Jail snapshot.
      tags:
      - Snapshots
  /snapshot/destroy:
    delete:
      description: 'Destroy a snapshot for any given VM or a Jail.<br>`AUTH`: Only
        `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SnapshotName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Destroy a snapshot for any given VM or a Jail.
      tags:
      - Snapshots
  /snapshot/rollback:
    post:
      description: 'Rollback to a previous snapshot.<br>`AUTH`: Only `rest` user is
        allowed.<br>'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SnapshotName'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Rollback to a previous snapshot.
      tags:
      - Snapshots
  /snapshot/take:
    post:
      description: 'Take a new VM or Jail snapshot, using the resource name (Jail
        name or a VM name).<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.SnapshotInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Take a new snapshot.
      tags:
      - Snapshots
  /vm/all:
    get:
      description: 'Get the list of all VMs, including the information about them.<br>`AUTH`:
        Both users are allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HosterVmUtils.VmApi'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all VMs.
      tags:
      - VMs
  /vm/all/cache:
    get:
      description: 'Get the list of all VMs, including the information about them
        (cached version).<br>`AUTH`: Both users are allowed.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/HosterVmUtils.VmApi'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: List all VMs (cached version).
      tags:
      - VMs
  /vm/clone:
    post:
      description: 'Clone the VM using it''s name, and optionally specify the snapshot
        name to be used for cloning.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.VmCloneInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Clone the VM.
      tags:
      - VMs
  /vm/deploy:
    post:
      description: 'Deploy a new VM.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/HosterVm.VmDeployInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Deploy the new VM.
      tags:
      - VMs
  /vm/destroy/{vm_name}:
    delete:
      description: 'Destroy the VM using it''s name.<br>`AUTH`: Only `rest` user is
        allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Destroy the VM.
      tags:
      - VMs
  /vm/info/{vm_name}:
    get:
      description: 'Get the VM Info.<br>`AUTH`: Both users are allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HosterVmUtils.VmApi'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get the VM Info.
      tags:
      - VMs
  /vm/readme/{vm_name}:
    get:
      description: 'Get README.MD for a particular VM.<br>`AUTH`: Only `rest` user
        is allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get README.MD for a particular VM.
      tags:
      - VMs
  /vm/settings/{vm_name}:
    get:
      description: 'Get the settings for a particular VM.<br>`AUTH`: Both users are
        allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HosterVmUtils.VmConfig'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Get the settings for a particular VM.
      tags:
      - VMs
  /vm/settings/add-tag/{vm_name}/{new_tag}:
    post:
      description: 'Add a new tag for any particular VM.<br>`AUTH`: Only `rest` user
        is allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      - description: New Tag
        in: path
        name: new_tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Add a new tag for any particular VM.
      tags:
      - VMs
      - Tags
  /vm/settings/cpu/{vm_name}:
    post:
      description: 'Modify VM''s CPU settings.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Name of the VM
        in: path
        name: vm_name
        required: true
        type: string
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.VmCpuInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Modify VM's CPU settings.
      tags:
      - VMs
  /vm/settings/delete-tag/{vm_name}/{existing_tag}:
    delete:
      description: 'Delete an existing tag for any specific VM.<br>`AUTH`: Only `rest`
        user is allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      - description: Existing Tag
        in: path
        name: existing_tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Delete an existing tag for any specific VM.
      tags:
      - VMs
      - Tags
  /vm/settings/ram/{vm_name}:
    post:
      description: 'Modify VM''s RAM settings.<br>`AUTH`: Only `rest` user is allowed.'
      parameters:
      - description: Name of the VM
        in: path
        name: vm_name
        required: true
        type: string
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.VmRamInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Modify VM's RAM settings.
      tags:
      - VMs
  /vm/start/{vm_name}:
    post:
      description: 'Start a specific VM using it''s name as a parameter.<br>`AUTH`:
        Both users are allowed.'
      parameters:
      - description: VM Name
        in: path
        name: vm_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Start a specific VM.
      tags:
      - VMs
  /vm/stop:
    post:
      description: 'Stop a specific VM using it''s name as a parameter.<br>`AUTH`:
        Both users are allowed.'
      parameters:
      - description: Request payload
        in: body
        name: Input
        required: true
        schema:
          $ref: '#/definitions/handlers.VmStopInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SwaggerSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.SwaggerError'
      security:
      - BasicAuth: []
      summary: Stop a specific VM.
      tags:
      - VMs
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
